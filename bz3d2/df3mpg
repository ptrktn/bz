#!/bin/sh
# $Id: df3mpg,v 1.1 2003/08/07 13:33:51 petterik Exp $

get_ini () {
	cat << EOFINI > bz3d2mov.ini
Output_File_Type=C
Width=256
Height=256
Quality=9
Antialias=on
Antialias_Threshold=0.1
Display=off
Library_Path=/usr/local/share/povray-3.5/include
EOFINI
}

get_pov () {
	rm -f bz3d2mov.pov
	cat << EOFPOV > bz3d2mov.pov
#include "metals.inc"

#declare RADIUS = 0.3;
#declare NX = $1;
#declare NY = $2;
#declare NZ = $3;
#declare DD = <NX,NY,NZ>;
#declare CC = DD / 2;
#declare VP = <120*cos(2*pi*clock),120*sin(2*pi*clock),0>;

global_settings { 
	ambient_light <1,1,1> 
	assumed_gamma 1
}

camera {
   location VP
   up y
   right x
   angle 60
   sky <0,0,1>
   look_at <0,0,0>
}

light_source {
   VP + <0,0,NZ/2>
   color rgb <1,1,1>
   media_interaction on
   media_attenuation on
   shadowless
}

#declare theinterior = interior {
   media {
      intervals 100
		ratio 0.5
      samples 4,4
		method 2
      emission <1,1,1> / 10
      absorption <1,1,1> / 30
      scattering { 1, <0,0,0> }
      confidence 0.999
      variance 1/1000
      density {
         density_file df3 "$4" 
			interpolate 1 
            color_map {
              [0.0 rgb <0,0,0>]
              [0.2 rgb <0,0,0>]
              [0.4 rgb <0,0,1>]
              [0.6 rgb <0,1,0>]
              [1.0 rgb <1,0,0>]
            }
      }
   }
}

box {
   <0,0,0>, <1,1,1>
   pigment { rgbf 1 }
   interior { theinterior }
   hollow
	translate <-0.5,-0.5,-0.5>
	scale DD
}

#declare bbox = texture {
   pigment { rgb <0.5,0.5,0.5> }
   finish { F_MetalB }
}

/* Corners of box */
union {
	sphere { <0,0,0>, RADIUS texture {bbox} }
	sphere { <0,NY,0>, RADIUS texture {bbox} }
	sphere { <NX,NY,0>, RADIUS texture {bbox} }
	sphere { <NX,0,0>, RADIUS texture {bbox} }
	sphere { <0,0,NZ>, RADIUS texture {bbox} }
	sphere { <0,NY,NZ>, RADIUS texture {bbox} }
	sphere { <NX,NY,NZ>, RADIUS texture {bbox} }
	sphere { <NX,0,NZ>, RADIUS texture {bbox} }
	translate -CC
}

/* Main border of box */
union {
	cylinder { <0,0,0>, <NX,0,0>, RADIUS texture {bbox} }
	cylinder { <0,0,0>, <0,NY,0>, RADIUS texture {bbox} }
	cylinder { <0,0,0>, <0,0,NZ>, RADIUS texture {bbox} }
	cylinder { <NX,NY,NZ>, <0,NY,NZ>, RADIUS texture {bbox} }
	cylinder { <NX,NY,NZ>, <NX,0,NZ>, RADIUS texture {bbox} }
	cylinder { <NX,NY,NZ>, <NX,NY,0>, RADIUS texture {bbox} }
	cylinder { <0,0,NZ>, <NX,0,NZ>, RADIUS texture {bbox} }
	cylinder { <0,0,NZ>, <0,NY,NZ>, RADIUS texture {bbox} }
	cylinder { <NX,NY,0>, <NX,0,0>, RADIUS texture {bbox} }
	cylinder { <NX,NY,0>, <0,NY,0>, RADIUS texture {bbox} }
	cylinder { <0,NY,0>, <0,NY,NZ>, RADIUS texture {bbox} }
	cylinder { <NX,0,0>, <NX,0,NZ>, RADIUS texture {bbox} }
	translate -CC
}

EOFPOV
}

clean_up () {
	rm -f bz3d2mov.ini bz3d2mov.pov bz3d2mov.tga *.gif
}

NX=`grep ^NX $1 | awk '{print $2}'`
NY=`grep ^NY $1 | awk '{print $2}'`
NZ=`grep ^NZ $1 | awk '{print $2}'`

echo "INFO Dimensions: $NX x $NY x $NZ"

get_ini
N=0

FILES=$2
MPEG=1

if [ "$FILES" = "" ]; then
	FILES=`ls -1 *.df3`
else
	MPEG=0
fi

for i in $FILES; do
	get_pov $NX $NY $NZ $i
	nice povray +Ibz3d2mov.pov bz3d2mov.ini
	if [ $? != 0 ] ; then
		echo "ray tracing failed"
		clean_up
		exit 1
	fi
	convert -quality 100 bz3d2mov.tga GIF:$N.gif
	if [ $? != 0 ] ; then
		echo "convert failed"
		clean_up
		exit 1
	fi
	N=`expr $N \+ 1`
done

if [ "$MPEG" = "1" ] ; then 
	ffmpeg -y -b 800 -i %d.gif df3.mpg
	if [ $? != 0 ] ; then
		echo "ffmepg failed"
		clean_up
		exit 1
	fi
	clean_up
else
	rm -f bz3d2mov.tga bz3d2mov.pov bz3d2mov.ini
fi

exit 0
